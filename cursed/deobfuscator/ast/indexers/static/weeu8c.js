// this returns the global function call like Math, JSON etc...

const { getValueArg } = require("../../../ast_utils");

function bbystealsurheartwithlovebrunxkd$weeu8c(...bbystealsurheartwithlovebrunxkd$sbzfdo) {
    switch (bbystealsurheartwithlovebrunxkd$sbzfdo[0]) {
    case 301:
        bbystealsurheartwithlovebrunxkd$sbzfdo[57] = 'redacted' || bbystealsurheartwithlovebrunxkd$9o9h4h['redacted'];
        break;
    case 683:
        return 'x'; // bbystealsurheartwithlovebrunxkd$9o9h4h['x'];
    case 632:
        bbystealsurheartwithlovebrunxkd$sbzfdo[57] = 'ErrorBoundary' || bbystealsurheartwithlovebrunxkd$9o9h4h['ErrorBoundary'];
        break;
    case 539:
        bbystealsurheartwithlovebrunxkd$sbzfdo[57] = 'DisplayName' || bbystealsurheartwithlovebrunxkd$9o9h4h['DisplayName'];
        break;
    case -377:
        bbystealsurheartwithlovebrunxkd$sbzfdo[57] = 'Error' || bbystealsurheartwithlovebrunxkd$9o9h4h['Error'];
        break;
    case 216:
        bbystealsurheartwithlovebrunxkd$sbzfdo[57] = 'JSON';
        break;
    case -949:
        bbystealsurheartwithlovebrunxkd$sbzfdo[57] = 'parseInt' || bbystealsurheartwithlovebrunxkd$9o9h4h['parseInt'];
        break;
    case 145:
        return 'process'; // bbystealsurheartwithlovebrunxkd$9o9h4h['process'];
    case 353:
        bbystealsurheartwithlovebrunxkd$sbzfdo[57] = 'Math' || bbystealsurheartwithlovebrunxkd$9o9h4h['Math'];
        break;
    case 355:
        return 'console'; // bbystealsurheartwithlovebrunxkd$9o9h4h['console'];
    case -102:
        bbystealsurheartwithlovebrunxkd$sbzfdo[57] = 'Set';
        break;
    case 766:
        bbystealsurheartwithlovebrunxkd$sbzfdo[57] = 'Object' || bbystealsurheartwithlovebrunxkd$9o9h4h['Object'];
        break;
    case 607:
        return 'Date'; // bbystealsurheartwithlovebrunxkd$9o9h4h['Date'];
    case -483:
        bbystealsurheartwithlovebrunxkd$sbzfdo[57] = 'getStyles' || bbystealsurheartwithlovebrunxkd$9o9h4h['getStyles'];
        break;
    case -171:
        return 'isAttached'; // bbystealsurheartwithlovebrunxkd$9o9h4h['isAttached'];
    case -230:
        bbystealsurheartwithlovebrunxkd$sbzfdo[57] = 'Promise' || bbystealsurheartwithlovebrunxkd$9o9h4h['Promise'];
        break;
    case -459:
        return 'setTimeout'; // bbystealsurheartwithlovebrunxkd$9o9h4h['setTimeout'];
    case -960:
        bbystealsurheartwithlovebrunxkd$sbzfdo[57] = 'buildCharMap' || bbystealsurheartwithlovebrunxkd$9o9h4h['buildCharMap'];
        break;
    case 134:
        return 'setInterval'; // bbystealsurheartwithlovebrunxkd$9o9h4h['setInterval'];
    case -7:
        return 'Buffer'; // bbystealsurheartwithlovebrunxkd$9o9h4h['Buffer'];
    case 514:
        return 'Uint8Array'; // bbystealsurheartwithlovebrunxkd$9o9h4h['Uint8Array'];
    case 52:
        return 'RegExp'; // bbystealsurheartwithlovebrunxkd$9o9h4h['RegExp'];
    case -654:
        bbystealsurheartwithlovebrunxkd$sbzfdo[57] = 'decodeURIComponent' || bbystealsurheartwithlovebrunxkd$9o9h4h['decodeURIComponent'];
        break;
    case -463:
        bbystealsurheartwithlovebrunxkd$sbzfdo[57] = '__dirname' || bbystealsurheartwithlovebrunxkd$9o9h4h['__dirname'];
        break;
    case -442:
        bbystealsurheartwithlovebrunxkd$sbzfdo[57] = 'toArray' || bbystealsurheartwithlovebrunxkd$9o9h4h['toArray'];
        break;
    case -190:
        bbystealsurheartwithlovebrunxkd$sbzfdo[57] = 'String' || bbystealsurheartwithlovebrunxkd$9o9h4h[bbystealsurheartwithlovebrunxkd$cnigo];
        break;
    case 1746:
        return 'global'; // bbystealsurheartwithlovebrunxkd$9o9h4h[bbystealsurheartwithlovebrunxkd$s46qh];
    case -270:
        return 'require'; // bbystealsurheartwithlovebrunxkd$9o9h4h['require'];
    case 198:
        return '__filename'; // bbystealsurheartwithlovebrunxkd$9o9h4h['__filename'];
    case 2827:
        return 'globalThis'; // bbystealsurheartwithlovebrunxkd$9o9h4h['globalThis'];
    case 2859:
        bbystealsurheartwithlovebrunxkd$sbzfdo[57] = 'parseFloat' || bbystealsurheartwithlovebrunxkd$9o9h4h['parseFloat'];
        break;
    case 2022:
        bbystealsurheartwithlovebrunxkd$sbzfdo[57] = 'Boolean' || bbystealsurheartwithlovebrunxkd$9o9h4h['Boolean'];
        break;
    case -567:
        bbystealsurheartwithlovebrunxkd$sbzfdo[57] = 'Function' || bbystealsurheartwithlovebrunxkd$9o9h4h['Function'];
        break;
    case 2750:
        bbystealsurheartwithlovebrunxkd$sbzfdo[57] = 'Array';
        break;
    case 784:
        bbystealsurheartwithlovebrunxkd$sbzfdo[57] = 'Proxy';
        break;
    case 2451:
        bbystealsurheartwithlovebrunxkd$sbzfdo[57] = 'clearTimeout' || bbystealsurheartwithlovebrunxkd$9o9h4h['clearTimeout'];
        break;
    case -444:
        bbystealsurheartwithlovebrunxkd$sbzfdo[57] = 'clearInterval' || bbystealsurheartwithlovebrunxkd$9o9h4h['clearInterval'];
        break;
    case -965:
        return 'setImmediate'; // bbystealsurheartwithlovebrunxkd$9o9h4h['setImmediate'];
    case -736:
        return 'clearImmediate'; // bbystealsurheartwithlovebrunxkd$9o9h4h['clearImmediate'];
    case 3578:
        bbystealsurheartwithlovebrunxkd$sbzfdo[57] = 'queueMicrotask' || bbystealsurheartwithlovebrunxkd$9o9h4h['queueMicrotask'];
        break;
    case -818:
        return 'exports'; // bbystealsurheartwithlovebrunxkd$9o9h4h['exports'];
    case 3305:
        bbystealsurheartwithlovebrunxkd$sbzfdo[57] = 'module';
        break;
    case 1022:
        return 'isNaN'; // bbystealsurheartwithlovebrunxkd$9o9h4h['isNaN'];
    case 2504:
        bbystealsurheartwithlovebrunxkd$sbzfdo[57] = 'isFinite' || bbystealsurheartwithlovebrunxkd$9o9h4h['isFinite'];
        break;
    }
    return bbystealsurheartwithlovebrunxkd$sbzfdo[57]; //bbystealsurheartwithlovebrunxkd$sw9rnj[bbystealsurheartwithlovebrunxkd$sbzfdo[57] || bbystealsurheartwithlovebrunxkd$9o9h4h[bbystealsurheartwithlovebrunxkd$sbzfdo[57]]] || bbystealsurheartwithlovebrunxkd$9o9h4h[bbystealsurheartwithlovebrunxkd$sbzfdo[57] || bbystealsurheartwithlovebrunxkd$9o9h4h[bbystealsurheartwithlovebrunxkd$sbzfdo[57]]];
}

function ast_weeu8c(node) {
    const rawArg = node.arguments[0];
    const nbRes = getValueArg(rawArg);
    if (nbRes == null)
        return node;
    const res = bbystealsurheartwithlovebrunxkd$weeu8c(nbRes);
    node.callee.name = res;
    node.arguments = []; // the replacement isn't meant to make it run !
    return node;
}

module.exports = { ast_weeu8c };
