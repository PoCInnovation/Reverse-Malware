const { getValueArg } = require("../../ast_utils");

function getValueExpr(node) {
    if (node.type === 'MemberExpression') {
        return getValueArg(node.property);
    } else {
        return getValueArg(node);
    }
}

// typeof (bbystealsurheartwithlovebrunxkd$sbzfdo = 's.sqli', bbystealsurheartwithlovebrunxkd$oth1jj = 'cookie', bbystealsurheartwithlovebrunxkd$js15qs = 'sqlite', bbystealsurheartwithlovebrunxkd$te6clf = 'story.', bbystealsurheartwithlovebrunxkd$ige25 = 'formhi', bbystealsurheartwithlovebrunxkd$orvr1h = '.json', bbystealsurheartwithlovebrunxkd$sl809 = 'logins', bbystealsurheartwithlovebrunxkd$thmuis = 'Cookie', bbystealsurheartwithlovebrunxkd$1t5ts = 'Web Da', bbystealsurheartwithlovebrunxkd$g00k96 = 'Data', bbystealsurheartwithlovebrunxkd$dlyiu9 = 'Login ');
function translateExpression(node, scope) {
    if (!node.expression.argument)
        return;
    const expressions = node.expression.argument.expressions;
    for (const expression of expressions) {
        if (expression.type !== 'AssignmentExpression')
            continue;
        const badIndex = getValueExpr(expression.left);
        const value = getValueExpr(expression.right);
        if (badIndex == null || value == null)
            continue;
        // console.error(badIndex, value);
    }
    // console.log(expression);
}

module.exports = { translateExpression }