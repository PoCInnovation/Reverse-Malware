const { getValueArg } = require("../../ast_utils");
const { ast_dynamicIndexes } = require("../indexers/funcs");

// proxy functions are functions that isn't defined, but points
// to another function defined before.
// this prevents the deobfuscator to output the function.

// if (node.type !== 'VariableDeclaration')
function handleDefProxies(funcName, node, scope) {
    const proxyValue = getValueArg(node.arguments[0].right);
    if (proxyValue == null)
        return;

    const scopedFunc = scope.getElementFromScope(node.callee.name)
    if (scopedFunc == null)
        return;

    console.log(funcName, '=>',  node.callee.name, '(', proxyValue, ')')
    scope.setElementInScope(funcName, function(val) {
        return scopedFunc(val + proxyValue);
    });
    // ast_dynamicIndexes.add(funcName);
}

module.exports = { handleDefProxies };
